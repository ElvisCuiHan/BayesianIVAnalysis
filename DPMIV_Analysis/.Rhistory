dm_filtered = read_delim(file = "DPMIV_Filtered.txt")
View(dm_filtered)
to_lm <- tibble(f.eid = dm_filtered$f.eid, LOG_SBP = log10(dm_filtered$SBP)) %>%
left_join(., snp_filtered, by = "f.eid") %>%
select(-f.eid)
to_lm <- tibble(f.eid = dm_filtered$f.eid, LOG_SBP = (dm_filtered$LOG_SBP)) %>%
left_join(., snp_filtered, by = "f.eid") %>%
select(-f.eid)
for(i in 2:270) {
to_lm[, i][is.na(to_lm[, i])] <- mean(as.matrix(to_lm[, i]), na.rm=TRUE)
}
### Let's go!
result = c()
for (i in 2:270) {
mod <- lm(LOG_SBP~., data=to_lm[, 1:i])
result <- c(result, summary(mod)$r.squared)
}
### Let's go!
result = c()
for (i in 2:270) {
print(i)
mod <- lm(LOG_SBP~., data=to_lm[, 1:i])
result <- c(result, summary(mod)$r.squared)
}
plot(result)
plot(result, type="l", xlab = "Number of SNPs", ylab = "R-square",
main = "R-square of regressing SNPs on LOG(SBP)")
hi = read.delim("DPMIV_test_data.dat", sep=" ", header=TRUE)
ca = hi[hi$ETHNICITY == 1, -23]
View(ca)
# Generate Filtered Data
dm_filtered <- tibble("L" = dm_all$CVD_L_i, "R" = dm_all$CVD_R_i,
"d" = sapply(CensorInd, gen_censor)) %>%
mutate("LOG_SBP" = log10(dm2$SBP),
"EUR" = dm_all$EUR,
"SEX" = SexInd,
#"PGS24" = dm_all$PGS000024,
#"PGS36" = dm_all$PGS000036,
#"SLEEP" = dm2$trouble_sleep,
"AGE_RECRUITMENT" = dm2$age_at_recruitment,
#"HRT" = dm2$ever_HRT,
"ALCOHOL_DAY" = sapply(AlcoInd, gen_alco),
"CHOLESTEROL" = dm2$total_cholesterol,
"HDL" = dm2$HDL,
"BMI" = dm2$BMI,
"SMOKE" = dm2$smoke_ever,
#"MET" = dm2$MET_decile,
#"ISCED" = dm2$ISCED_level,
"ETHNICITY" = as.numeric(EthInd),
#"EDUCATION" = as.numeric(EduInd),
"f.eid" = dm_all$f.eid)
hist(dm_filtered$LOG_SBP)
# Generate Filtered Data
dm_filtered <- tibble("L" = dm_all$CVD_L_i, "R" = dm_all$CVD_R_i,
"d" = sapply(CensorInd, gen_censor)) %>%
mutate("LOG_SBP" = log2(dm2$SBP),
"EUR" = dm_all$EUR,
"SEX" = SexInd,
#"PGS24" = dm_all$PGS000024,
#"PGS36" = dm_all$PGS000036,
#"SLEEP" = dm2$trouble_sleep,
"AGE_RECRUITMENT" = dm2$age_at_recruitment,
#"HRT" = dm2$ever_HRT,
"ALCOHOL_DAY" = sapply(AlcoInd, gen_alco),
"CHOLESTEROL" = dm2$total_cholesterol,
"HDL" = dm2$HDL,
"BMI" = dm2$BMI,
"SMOKE" = dm2$smoke_ever,
#"MET" = dm2$MET_decile,
#"ISCED" = dm2$ISCED_level,
"ETHNICITY" = as.numeric(EthInd),
#"EDUCATION" = as.numeric(EduInd),
"f.eid" = dm_all$f.eid)
hist(dm_filtered$LOG_SBP)
hist(dm2$SBP)
hi = read.delim("DPMIV_test_data.dat", sep=" ", header=TRUE)
ca = hi[hi$ETHNICITY == 1, -23]
hist(log2(exp(ca$LOG_SBP)))
hist(log2(dm2$SBP))
ca$LOG_SBP = log2(exp(ca$LOG_SBP))
#ca$LOG_SBP = log2(exp(ca$LOG_SBP))
write.table(ca, "../../Xuyang_Lu_codes_for_IV_models/DPMIV_UKB/DPMIV_test_data_eth1.dat",
col.names = F, row.names = F)
setwd("~/Downloads/Dr Li GSR/Xuyang_Lu_codes_for_IV_models/DPMIV_analysis")
ca = read_delim("temp_n_30000_ch_1100000.txt")[-c(1:10000), ]
ca = read_delim("temp.txt")[-c(1:10000), ]
ca = read_delim("temp.txt")[, ]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
acf(ca$b1, lag.max = 3000, main="Autocorrelation plot")
thinning = 20
mean(ca$b1[c(rep(FALSE, thinning), TRUE)])
sd(ca$b1[c(rep(FALSE, thinning), TRUE)])
CI = quantile(ca$b1[c(rep(FALSE, thinning), TRUE)], probs=c(0.025,0.5,0.975))
ggplot() + geom_histogram(aes(ca$b1[c(rep(FALSE, thinning), TRUE)]), bins = 45,
color="lightblue", fill="orange") +
xlab("") + ylab(expression(paste(beta[1]))) +
ggtitle(expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20))) +
geom_errorbarh(aes(xmin=CI[1], xmax=CI[3], y=-0.5), col="#0094EA", size=2.2) +
theme_bw() +
geom_vline(xintercept = CI[2], cex=1.2, color="purple")
plot(ca$b1[c(rep(FALSE, thinning), TRUE)], type="l", ylab = expression(paste(beta[1])),
xlab = "", main=expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20)))
hist((ca$b2), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
setwd("~/Downloads/Dr Li GSR/Xuyang_Lu_codes_for_IV_models/DPMIV_analysis")
ca = read_delim("temp.txt")[, ]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
ca = read_delim("temp_0310.txt")[, ]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
ca = read_delim("temp_0310.txt", header=T)[, ]
ca = read.delim("temp_0310.txt", header=T)[, ]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
head(ca)
ca = read.delim("temp_0310.txt", sep=" ", header=T)[, ]
ca = read.delim("temp_0310.txt", sep=" ", header=F)[, ]
ca$V1
hist((ca$V1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
acf(ca$V1, lag.max = 3000, main="Autocorrelation plot")
ca = read.delim("temp_0310.txt", sep=" ", header=F)[, ]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
colnames(ca) = c("b1", "b2", "a1", "a2", "v", "ncl")
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
acf(ca$b1, lag.max = 3000, main="Autocorrelation plot")
thinning = 20
mean(ca$b1[c(rep(FALSE, thinning), TRUE)])
sd(ca$b1[c(rep(FALSE, thinning), TRUE)])
CI = quantile(ca$b1[c(rep(FALSE, thinning), TRUE)], probs=c(0.025,0.5,0.975))
ggplot() + geom_histogram(aes(ca$b1[c(rep(FALSE, thinning), TRUE)]), bins = 45,
color="lightblue", fill="orange") +
xlab("") + ylab(expression(paste(beta[1]))) +
ggtitle(expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20))) +
geom_errorbarh(aes(xmin=CI[1], xmax=CI[3], y=-0.5), col="#0094EA", size=2.2) +
theme_bw() +
geom_vline(xintercept = CI[2], cex=1.2, color="purple")
plot(ca$b1[c(rep(FALSE, thinning), TRUE)], type="l", ylab = expression(paste(beta[1])),
xlab = "", main=expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20)))
hist(ca$ncl, breaks=100, main = expression(paste("Histograms of the number of clusters")),
xlab = "ncluster")
plot(ca$ncl[c(rep(FALSE, thinning), TRUE)], type="l")
plot(ca$b2[c(rep(FALSE, thinning), TRUE)], type="l", ylab = expression(paste(beta[1])),
xlab = "", main=expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20)))
plot(ca$a1[c(rep(FALSE, thinning), TRUE)], type="l", ylab = expression(paste(beta[1])),
xlab = "", main=expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20)))
plot(ca$a2[c(rep(FALSE, thinning), TRUE)], type="l", ylab = expression(paste(beta[1])),
xlab = "", main=expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20)))
ca = read.delim("temp.txt", sep=" ", header=F)[, ]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
ca = read_delim("temp.txt")
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
acf(ca$b1, lag.max = 3000, main="Autocorrelation plot")
thinning = 20
mean(ca$b1[c(rep(FALSE, thinning), TRUE)])
sd(ca$b1[c(rep(FALSE, thinning), TRUE)])
CI = quantile(ca$b1[c(rep(FALSE, thinning), TRUE)], probs=c(0.025,0.5,0.975))
ggplot() + geom_histogram(aes(ca$b1[c(rep(FALSE, thinning), TRUE)]), bins = 45,
color="lightblue", fill="orange") +
xlab("") + ylab(expression(paste(beta[1]))) +
ggtitle(expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20))) +
geom_errorbarh(aes(xmin=CI[1], xmax=CI[3], y=-0.5), col="#0094EA", size=2.2) +
theme_bw() +
geom_vline(xintercept = CI[2], cex=1.2, color="purple")
plot(ca$b1[c(rep(FALSE, thinning), TRUE)], type="l", ylab = expression(paste(beta[1])),
xlab = "", main=expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20)))
hist(ca$ncl, breaks=100, main = expression(paste("Histograms of the number of clusters")),
xlab = "ncluster")
plot(ca$ncl[c(rep(FALSE, thinning), TRUE)], type="l")
plot(ca$b2[c(rep(FALSE, thinning), TRUE)], type="l", ylab = expression(paste(beta[1])),
xlab = "", main=expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20)))
ca = read_delim("temp.txt")
install.packages("Opt5PL")
library(Opt5PL)
T5=c(30000,0.5,800,0.5,2)
ca = EDpOPT(LB=1.95,UB=32000, P=T5,EDp=.5,grid=.01, r =30,epsilon=.001)
ca$`c-optimal design`
ca = EDpOPT(LB=1.95,UB=32000, P=c(1,1,1,0,1),EDp=.5,grid=.01, r =30,epsilon=.001)
##Under the 5PL model with the parameter values
##T5=(30000,0.5,800,0.5,2) and the dose range [1.95,32000],
##find the D-efficiency of the broad range design.
##The broad range design
dose=c(1.95,7.8,31.25,125,500,2000,8000,32000)
dlength=length(dose)
weight=rep(1/dlength,dlength-1)
##Parameter values
T5=c(30000,0.5,800,0.5,2)
##Compute D-efficiency of the broad range design
Deff(weight,dose,model=5,P=T5,LB=1.95,UB=32000,grid=.01)
##Parameter values for the 5PL model
T5=c(30000,0.5,800,0.5,2)
##Find the Ds-optimal design
DsOPT(LB=1.95, UB=32000, P=T5,grid=.01,epsilon=.001)
install.packages("DPpackage")
install.packages("DPpackage")
devtools::install_github("https://github.com/cran/DPpackage")
sessionInfo()
packageurl <- "https://cran.r-project.org/src/contrib/Archive/DPpackage/DPpackage_1.1-7.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
library(DPpackage)
install.packages("mvtnorm")
install.packages("mvtnorm")
devtools::install_github("https://github.com/cran/DPpackage")
packageurl <- "https://cran.r-project.org/src/contrib/Archive/DPpackage/DPpackage_1.1-7.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
library(Rcpp)
library(dirichletprocess)
install.packages("icenReg")
library(icenReg)
dm_filtered = read_delim(file = "DPMIV_Filtered.txt")
library(tidyverse)
rm(list=ls())
library(icenReg)
library(tidyverse)
setwd("~/Downloads/Dr Li GSR/UKB Data/Interval_Censoring_Project_new/")
dm_filtered = read_delim(file = "DPMIV_Filtered.txt")
View(dm_filtered)
dm_filtered$R[ dm_filtered$d == 3] = Inf
View(dm_filtered)
ic_np(cbind(L, R) ~ LOG_SBP + EUR + SEX, data = dm_filtered)
ic_np(cbind(L, R) ~ LOG_SBP, data = dm_filtered)
sum(is.na(LOG_SBP))
sum(is.na(dm_filtered$LOG_SBP))
dm_filtered = read_delim(file = "DPMIV_test_data.dat")
View(dm_filtered)
dm_filtered$R[ dm_filtered$d == 3] = Inf
ic_np(cbind(L, R) ~ LOG_SBP, data = dm_filtered)
View(dm_filtered)
ic_np(cbind(exp(L), exp(R)) ~ LOG_SBP, data = dm_filtered)
ic_np(cbind(exp(L), exp(R)) ~ 0, data = dm_filtered)
ca = ic_np(cbind(exp(L), exp(R)) ~ 0, data = dm_filtered)
summary(ca)
ca$coefficients
ca = ic_sp(cbind(exp(L), exp(R)) ~ LOG_SBP, data = dm_filtered)
summary(ca)
ca = ic_sp(cbind(exp(L), exp(R)) ~ LOG_SBP, model="aft", data = dm_filtered)
ca = ic_par(cbind(exp(L), exp(R)) ~ LOG_SBP, model="aft", data = dm_filtered)
summary(ca)
ca = ic_par(cbind(exp(L), exp(R)) ~ LOG_SBP, model="aft",
data = dm_filtered, dist = "lnorm")
summary(ca)
data("IR_diabetes")
IR_diabetes$left
View(dm_filtered)
View(dm_filtered)
mod2 = ic_par(cbind(exp(L), exp(R)) ~ LOG_SBP + EUR + SEX + AGE_RECRUITMENT +
ALCOHOL_DAY + CHOLESTEROL, model="aft",
data = dm_filtered, dist = "lnorm")
summary(mod2)
mod2 = ic_par(cbind(exp(L), exp(R)) ~ LOG_SBP + EUR + SEX + AGE_RECRUITMENT +
ALCOHOL_DAY + CHOLESTEROL + HDL + BMI + SMOKE, model="aft",
data = dm_filtered, dist = "lnorm")
summary(mod2)
mod2 = ic_par(cbind(exp(L), exp(R)) ~ LOG_SBP + EUR + SEX + AGE_RECRUITMENT +
ALCOHOL_DAY + CHOLESTEROL + HDL + BMI + SMOKE, model="aft",
data = dm_filtered, dist = "lnorm")
dm_filtered = read_delim(file = "DPMIV_test_data_eth1.dat")
dm_filtered$R[ dm_filtered$d == 3] = Inf
dm_filtered = read.delim(file = "DPMIV_test_data_eth1.dat", header=T)
dm_filtered = read.delim(file = "DPMIV_test_data_eth1.dat", sep=" ", header=T)
dm_filtered$R[ dm_filtered$d == 3] = Inf
dm_filtered = read.delim(file = "DPMIV_test_data_eth1.dat", sep=" ", header=T)
View(dm_filtered)
dm_filtered = read.delim(file = "DPMIV_test_data_eth1.dat", sep=" ", header=F)
ca = read_delim(file="DPMIV_test_data.dat")
View(ca)
colnames(dm_filtered) = colnames(ca)[-1]
dm_filtered$R[ dm_filtered$d == 3] = Inf
mod1 = ic_par(cbind(exp(L), exp(R)) ~ LOG_SBP, model="aft",
data = dm_filtered, dist = "lnorm")
View(dm_filtered)
colnames(dm_filtered) = colnames(ca)[-23]
dm_filtered$R[ dm_filtered$d == 3] = Inf
mod1 = ic_par(cbind(exp(L), exp(R)) ~ LOG_SBP, model="aft",
data = dm_filtered, dist = "lnorm")
summary(mod1)
ca = read_delim("temp.txt")
setwd("~/Downloads/Dr Li GSR/Codes/DPMIV_analysis")
ca = read_delim("temp.txt")
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
acf(ca$b1, lag.max = 3000, main="Autocorrelation plot")
ca = read_delim("temp.txt")
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
acf(ca$b1, lag.max = 3000, main="Autocorrelation plot")
thinning = 20
mean(ca$b1[c(rep(FALSE, thinning), TRUE)])
sd(ca$b1[c(rep(FALSE, thinning), TRUE)])
mod1 = ic_par(cbind(exp(L), exp(R)) ~ LOG_SBP, model="aft",
data = dm_filtered, dist = "lnorm")
summary(mod1)
mod2 = ic_par(cbind(exp(L), exp(R)) ~ LOG_SBP + EUR + SEX + AGE_RECRUITMENT +
ALCOHOL_DAY + CHOLESTEROL + HDL + BMI + SMOKE, model="aft",
data = dm_filtered, dist = "lnorm")
summary(mod2)
thinning = 20
burnin = 10000
ca5 = read_delim("temp_n_30000_trial_5.txt")[-c(1:burnin), ]
ca4 = read_delim("temp_n_30000_trial_4.txt")[-c(1:burnin), ]
ca3 = read_delim("temp_n_30000_trial_3.txt")[-c(1:burnin), ]
ca2 = read_delim("temp_n_30000_trial_2.txt")[-c(1:burnin), ]
ca1 = read_delim("temp_n_30000_trial_1.txt")[-c(1:burnin), ]
t1 = c(1:length(ca3$b1))[c(rep(FALSE, thinning), TRUE)]
hi = tibble(t = 1:length(t1),
c1 = ca1$b1[c(rep(FALSE, thinning), TRUE)],
c2 = ca2$b1[c(rep(FALSE, thinning), TRUE)],
c3 = ca3$b1[c(rep(FALSE, thinning), TRUE)],
c4 = ca4$b1[c(rep(FALSE, thinning), TRUE)],
c5 = ca5$b1[c(rep(FALSE, thinning), TRUE)]) %>%
pivot_longer(cols = c1:c5)
hi$value
mean(hi$value)
sd(hi$value)
-12.1 * 2 / exp(1)
summary(mod2)
ca = read_delim("temp.txt")
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
acf(ca$b1, lag.max = 3000, main="Autocorrelation plot")
thinning = 20
mean(ca$b1[c(rep(FALSE, thinning), TRUE)])
sd(ca$b1[c(rep(FALSE, thinning), TRUE)])
CI = quantile(ca$b1[c(rep(FALSE, thinning), TRUE)], probs=c(0.025,0.5,0.975))
ggplot() + geom_histogram(aes(ca$b1[c(rep(FALSE, thinning), TRUE)]), bins = 45,
color="lightblue", fill="orange") +
xlab("") + ylab(expression(paste(beta[1]))) +
ggtitle(expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20))) +
geom_errorbarh(aes(xmin=CI[1], xmax=CI[3], y=-0.5), col="#0094EA", size=2.2) +
theme_bw() +
geom_vline(xintercept = CI[2], cex=1.2, color="purple")
plot(ca$b1[c(rep(FALSE, thinning), TRUE)], type="l", ylab = expression(paste(beta[1])),
xlab = "", main=expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20)))
ca = read_delim("temp.txt")【-1:1000,]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
ca = read_delim("temp.txt")[-1:1000,]
ca = read_delim("temp.txt")[-c(1:1000),]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
acf(ca$b1, lag.max = 3000, main="Autocorrelation plot")
thinning = 20
mean(ca$b1[c(rep(FALSE, thinning), TRUE)])
sd(ca$b1[c(rep(FALSE, thinning), TRUE)])
ca = read_delim("temp2.txt")[-c(1:1000),]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
acf(ca$b1, lag.max = 3000, main="Autocorrelation plot")
thinning = 20
mean(ca$b1[c(rep(FALSE, thinning), TRUE)])
sd(ca$b1[c(rep(FALSE, thinning), TRUE)])
CI = quantile(ca$b1[c(rep(FALSE, thinning), TRUE)], probs=c(0.025,0.5,0.975))
ggplot() + geom_histogram(aes(ca$b1[c(rep(FALSE, thinning), TRUE)]), bins = 45,
color="lightblue", fill="orange") +
xlab("") + ylab(expression(paste(beta[1]))) +
ggtitle(expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20))) +
geom_errorbarh(aes(xmin=CI[1], xmax=CI[3], y=-0.5), col="#0094EA", size=2.2) +
theme_bw() +
geom_vline(xintercept = CI[2], cex=1.2, color="purple")
plot(ca$b1[c(rep(FALSE, thinning), TRUE)], type="l", ylab = expression(paste(beta[1])),
xlab = "", main=expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20)))
hist(ca$ncl, breaks=100, main = expression(paste("Histograms of the number of clusters")),
xlab = "ncluster")
plot(ca$ncl[c(rep(FALSE, thinning), TRUE)], type="l")
thinning = 20
burnin = 10000
mean(ca$b1[c(rep(FALSE, thinning), TRUE)])
sd(ca$b1[c(rep(FALSE, thinning), TRUE)])
CI = quantile(ca$b1[c(rep(FALSE, thinning), TRUE)], probs=c(0.025,0.5,0.975))
ggplot() + geom_histogram(aes(ca$b1[c(rep(FALSE, thinning), TRUE)]), bins = 45,
color="lightblue", fill="orange") +
xlab("") + ylab(expression(paste(beta[1]))) +
ggtitle(expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20))) +
geom_errorbarh(aes(xmin=CI[1], xmax=CI[3], y=-0.5), col="#0094EA", size=2.2) +
theme_bw() +
geom_vline(xintercept = CI[2], cex=1.2, color="purple")
ca = read_delim("temp2.txt")[-c(1:1000),]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
ca = read_delim("temp2.txt")[-c(1:2000),]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
acf(ca$b1, lag.max = 3000, main="Autocorrelation plot")
thinning = 20
mean(ca$b1[c(rep(FALSE, thinning), TRUE)])
sd(ca$b1[c(rep(FALSE, thinning), TRUE)])
CI = quantile(ca$b1[c(rep(FALSE, thinning), TRUE)], probs=c(0.025,0.5,0.975))
ggplot() + geom_histogram(aes(ca$b1[c(rep(FALSE, thinning), TRUE)]), bins = 45,
color="lightblue", fill="orange") +
xlab("") + ylab(expression(paste(beta[1]))) +
ggtitle(expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20))) +
geom_errorbarh(aes(xmin=CI[1], xmax=CI[3], y=-0.5), col="#0094EA", size=2.2) +
theme_bw() +
geom_vline(xintercept = CI[2], cex=1.2, color="purple")
plot(ca$b1[c(rep(FALSE, thinning), TRUE)], type="l", ylab = expression(paste(beta[1])),
xlab = "", main=expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20)))
hist(ca$ncl, breaks=100, main = expression(paste("Histograms of the number of clusters")),
xlab = "ncluster")
plot(ca$ncl[c(rep(FALSE, thinning), TRUE)], type="l")
ca = read_delim("temp_n_30000_trial_6.txt")[-c(1:2000),]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
acf(ca$b1, lag.max = 3000, main="Autocorrelation plot")
thinning = 20
acf(ca$b1, lag.max = 1000, main="Autocorrelation plot")
ca = read_delim("temp_n_30000_trial_6.txt")[-c(1:2),]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
acf(ca$b1, lag.max = 1000, main="Autocorrelation plot")
ca = read_delim("temp_n_30000_trial_6.txt")[-c(1:2000),]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
acf(ca$b1, lag.max = 1000, main="Autocorrelation plot")
thinning = 20
mean(ca$b1[c(rep(FALSE, thinning), TRUE)])
sd(ca$b1[c(rep(FALSE, thinning), TRUE)])
CI = quantile(ca$b1[c(rep(FALSE, thinning), TRUE)], probs=c(0.025,0.5,0.975))
ggplot() + geom_histogram(aes(ca$b1[c(rep(FALSE, thinning), TRUE)]), bins = 45,
color="lightblue", fill="orange") +
xlab("") + ylab(expression(paste(beta[1]))) +
ggtitle(expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20))) +
geom_errorbarh(aes(xmin=CI[1], xmax=CI[3], y=-0.5), col="#0094EA", size=2.2) +
theme_bw() +
geom_vline(xintercept = CI[2], cex=1.2, color="purple")
plot(ca$b1[c(rep(FALSE, thinning), TRUE)], type="l", ylab = expression(paste(beta[1])),
xlab = "", main=expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20)))
ca = read_delim("temp_n_30000_trial_6.txt")[-c(1:2000),]
hist((ca$b1), breaks=100, main = expression(paste("Histograms of the posterior samples of ", beta[1])),
xlab = expression(paste(beta[1])))
acf(ca$b1, lag.max = 1000, main="Autocorrelation plot")
thinning = 20
mean(ca$b1[c(rep(FALSE, thinning), TRUE)])
sd(ca$b1[c(rep(FALSE, thinning), TRUE)])
CI = quantile(ca$b1[c(rep(FALSE, thinning), TRUE)], probs=c(0.025,0.5,0.975))
ggplot() + geom_histogram(aes(ca$b1[c(rep(FALSE, thinning), TRUE)]), bins = 45,
color="lightblue", fill="orange") +
xlab("") + ylab(expression(paste(beta[1]))) +
ggtitle(expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20))) +
geom_errorbarh(aes(xmin=CI[1], xmax=CI[3], y=-0.5), col="#0094EA", size=2.2) +
theme_bw() +
geom_vline(xintercept = CI[2], cex=1.2, color="purple")
plot(ca$b1[c(rep(FALSE, thinning), TRUE)], type="l", ylab = expression(paste(beta[1])),
xlab = "", main=expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20)))
plot(ca$b2[c(rep(FALSE, thinning), TRUE)], type="l", ylab = expression(paste(beta[1])),
xlab = "", main=expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20)))
plot(ca$b1[c(rep(FALSE, thinning), TRUE)], type="l", ylab = expression(paste(beta[1])),
xlab = "", main=expression(paste("Trace plots of the posterior samples of ", beta[1],
", thinning=", 20)))
thinning = 20
burnin = 10000
ca6 = read_delim("temp_n_30000_trial_6.txt")[-c(1:burnin), ]
ca5 = read_delim("temp_n_30000_trial_5.txt")[-c(1:burnin), ]
ca4 = read_delim("temp_n_30000_trial_4.txt")[-c(1:burnin), ]
ca3 = read_delim("temp_n_30000_trial_3.txt")[-c(1:burnin), ]
ca2 = read_delim("temp_n_30000_trial_2.txt")[-c(1:burnin), ]
ca1 = read_delim("temp_n_30000_trial_1.txt")[-c(1:burnin), ]
t1 = c(1:length(ca3$b1))[c(rep(FALSE, thinning), TRUE)]
hi = tibble(t = 1:length(t1),
c1 = ca1$b1[c(rep(FALSE, thinning), TRUE)],
c2 = ca2$b1[c(rep(FALSE, thinning), TRUE)],
c3 = ca3$b1[c(rep(FALSE, thinning), TRUE)],
c4 = ca4$b1[c(rep(FALSE, thinning), TRUE)],
c5 = ca5$b1[c(rep(FALSE, thinning), TRUE)],
c6 = ca6$b1[c(rep(FALSE, thinning), TRUE)]) %>%
pivot_longer(cols = c1:c5)
hi = tibble(t = 1:length(t1),
c1 = ca1$b1[c(rep(FALSE, thinning), TRUE)],
c2 = ca2$b1[c(rep(FALSE, thinning), TRUE)],
c3 = ca3$b1[c(rep(FALSE, thinning), TRUE)],
c4 = ca4$b1[c(rep(FALSE, thinning), TRUE)],
c5 = ca5$b1[c(rep(FALSE, thinning), TRUE)],
c6 = ca6$b1[c(rep(FALSE, thinning), TRUE)]) %>%
pivot_longer(cols = c1:c6)
ggplot(aes(x=t,y=value), data = hi) +
geom_line(aes(color=name), cex=0.3) +
xlab("Iteration") + ylab(expression(paste(beta[1]))) +
ylim(-30, 6) +
theme_bw() +
theme(axis.title.y=element_text(size=14)) +
ggtitle("Diagonasis of Chain Mixing")
install.packages("DPpackage")
devtools::install_github("https://github.com/cran/DPpackage")
install.packages("~/Downloads/DPpackage_1.1-7.4.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/DPpackage_1.1-7.4.tar.gz", repos = NULL, type = "source")
